services:
  # NestJS Auth Service
  auth-backend:
    build: ./auth-backend
    image: auth-backend:latest
    container_name: auth-backend
    expose:
      - '3000'
    depends_on:
      - postgres
      - kafka
    env_file:
      - ./auth-backend/.env
    networks:
      - app-network

  # # PostgreSQL DB
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - '5432:5432'
    env_file:
      - ./auth-backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # The Graph Query Service
  graph-query-service:
    build: ./graph-query-service
    image: graph-query-service:latest
    container_name: graph-query-service
    expose:
      - '5000'
    depends_on:
      - kafka
    env_file:
      - ./graph-query-service/.env
    networks:
      - app-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-backend
      - graph-query-service
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      CLUSTER_ID: abcd1234ef567890abcd1234ef567890
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge